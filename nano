#!/bin/bash
# File: .git/hooks/pre-push   (chmod +x .git/hooks/pre-push)

LOGGER_TAG="git-pre-push"

# Run the labeling logic in the background so push is never blocked
(
  set -euo pipefail

  # Ensure we are inside a GCP VM
  if ! curl -sf -H "Metadata-Flavor: Google" \
         http://metadata.google.internal/ >/dev/null 2>&1; then
    echo "[$(date -Iseconds)] $LOGGER_TAG: Not running inside a GCP VM, skipping" | logger -t $LOGGER_TAG
    exit 0
  fi

  # Get metadata
  PROJECT=$(curl -s -H "Metadata-Flavor: Google" \
    http://metadata.google.internal/computeMetadata/v1/project/project-id)
  VM_NAME=$(curl -s -H "Metadata-Flavor: Google" \
    http://metadata.google.internal/computeMetadata/v1/instance/name)
  ZONE_FULL=$(curl -s -H "Metadata-Flavor: Google" \
    http://metadata.google.internal/computeMetadata/v1/instance/zone)
  ZONE=$(echo "$ZONE_FULL" | awk -F/ '{print $NF}')

  echo "[$(date -Iseconds)] $LOGGER_TAG: Running on $VM_NAME in $ZONE ($PROJECT)" | logger -t $LOGGER_TAG

  # Make sure gcloud is installed
  if ! command -v gcloud >/dev/null 2>&1; then
    echo "gcloud not found" | logger -t $LOGGER_TAG
    exit 0
  fi

  # Ensure project is set
  gcloud config set project "$PROJECT" >/dev/null || true

  # Remove label from other VMs in this zone
  for i in $(gcloud compute instances list \
              --project="$PROJECT" \
              --filter="zone:($ZONE)" \
              --format="value(name)" || true); do
    gcloud compute instances remove-labels "$i" \
      --project="$PROJECT" \
      --zone="$ZONE" \
      --labels=last-push >/dev/null 2>&1 || true
  done

  # Add label to this VM
  gcloud compute instances add-labels "$VM_NAME" \
    --project="$PROJECT" \
    --zone="$ZONE" \
    --labels=last-push=true >/dev/null

  echo "[$(date -Iseconds)] $LOGGER_TAG: Labeled $VM_NAME as last-push" | logger -t $LOGGER_TAG
) & disown
